<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.solution.groupware.mapper.ContactMapper">

	<!-- 수신함 목록 조회  -->
	<select id="selectReceiveList" parameterType="hashmap" resultType="ContactVO">
		/* selectReceiveList */
		SELECT
			CI.CONTACT_IDX,
			CI.TITLE,
			CI.USER_IDX AS WRITER_USER_IDX,
			UI.NAME AS WRITER_USER_NAME,
			(SELECT COUNT(*) FROM CONTACT_STATUS WHERE CONTACT_IDX = CI.CONTACT_IDX AND READ_YN = 'Y') AS READ_COUNT,
			(SELECT COUNT(*) FROM CONTACT_STATUS WHERE CONTACT_IDX = CI.CONTACT_IDX) AS SEND_COUNT,
			CI.REG_DATE
		FROM
			CONTACT_INFO CI
			INNER JOIN USER_INFO UI
				ON CI.USER_IDX = UI.USER_IDX
			INNER JOIN CONTACT_STATUS CS
				ON CS.CONTACT_IDX = CI.CONTACT_IDX
		WHERE
			CI.USE_YN = 'Y'
			AND CS.RECEIVE_USER_IDX = #{userIdx}
			AND CS.TRASH_YN = 'N'
			AND CS.DEL_YN = 'N'
		ORDER BY
			CI.CONTACT_IDX DESC
	</select>
	
	<!-- 수신함 읽음 처리 -->
	<update id="updateReadStatus" parameterType="hashmap">
		/* updateReadStatus */
		UPDATE
			CONTACT_STATUS
		SET
			READ_YN = 'Y',
			READ_DATE = SYSDATE()
		WHERE
			CONTACT_IDX = #{contactIdx}
			AND RECEIVE_USER_IDX = #{userIdx}
	</update>

	<!-- 송신함 목록 조회  -->
	<select id="selectSendList" parameterType="hashmap" resultType="ContactVO">
		/* selectSendList */
		SELECT
			CI.CONTACT_IDX,
			CI.TITLE,
			(
				SELECT
					GROUP_CONCAT(NAME)
				FROM
					USER_INFO UI
				WHERE
					UI.USER_IDX IN (
						SELECT
							RECEIVE_USER_IDX
						FROM
							CONTACT_STATUS
						WHERE
							CONTACT_IDX = CI.CONTACT_IDX
					)
			) AS WRITER_USER_NAME,
			(SELECT COUNT(*) FROM CONTACT_STATUS WHERE CONTACT_IDX = CI.CONTACT_IDX AND READ_YN = 'Y') AS READ_COUNT,
			(SELECT COUNT(*) FROM CONTACT_STATUS WHERE CONTACT_IDX = CI.CONTACT_IDX) AS SEND_COUNT,
			CI.REG_DATE
		FROM
			CONTACT_INFO CI
		WHERE
			CI.USE_YN = 'Y'
			AND CI.DEL_YN = 'N'
			AND CI.USER_IDX = #{userIdx}
		ORDER BY
			CI.CONTACT_IDX DESC
	</select>

	<!-- 전체함 목록 조회  -->
	<select id="selectAllList" parameterType="hashmap" resultType="ContactVO">
		/* selectAllList */
		SELECT
			CI.CONTACT_IDX,
			CI.TITLE,
			CI.USER_IDX AS WRITER_USER_IDX,
			UI.NAME AS WRITER_USER_NAME,
			0 AS READ_COUNT,
			0 AS SEND_COUNT,
			CI.REG_DATE
		FROM
			CONTACT_INFO CI
			INNER JOIN USER_INFO UI
				ON CI.USER_IDX = UI.USER_IDX
		WHERE
			CI.USE_YN = 'Y'
		ORDER BY
			CI.CONTACT_IDX DESC
	</select>

	<!-- 휴지통 목록 조회  -->
	<select id="selectTrashList" parameterType="hashmap" resultType="ContactVO">
		/* selectTrashList */
		SELECT
			CI.CONTACT_IDX,
			CI.TITLE,
			CI.USER_IDX AS WRITER_USER_IDX,
			UI.NAME AS WRITER_USER_NAME,
			0 AS READ_COUNT,
			0 AS SEND_COUNT,
			CI.REG_DATE
		FROM
			CONTACT_INFO CI
			INNER JOIN USER_INFO UI
				ON CI.USER_IDX = UI.USER_IDX
		WHERE
			CI.USE_YN = 'N'
		ORDER BY
			CI.CONTACT_IDX DESC
	</select>
	
	<!-- 게시글 추가 -->
	<insert id="insertPost" useGeneratedKeys="true" keyProperty="contactIdx" parameterType="hashmap">
		/* insertPost */
		INSERT INTO CONTACT_INFO
		(
			TITLE, CONTENT, USER_IDX, REG_DATE
		)
		VALUES
		(
			#{title}, #{content}, #{userIdx}, SYSDATE()
		)
	</insert>
	
	<!-- 상태값 추가 -->
	<insert id="insertStatus" parameterType="hashmap">
		/* insertStatus */
		INSERT INTO CONTACT_STATUS
		(
			CONTACT_IDX, RECEIVE_USER_IDX, RECEIVE_TYPE, RECEIVE_DATE
		)
		VALUES
		(
			#{contactIdx}, #{receiveUserIdx}, #{receiveType}, SYSDATE()
		)
	</insert>
</mapper>